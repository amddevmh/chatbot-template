name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Add MongoDB service container for testing
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: List files in directory
        run: ls -la
          
      - name: Check for MongoDB secrets
        id: check_secrets
        run: |
          if [ "${{ secrets.MONGODB_URI }}" != "" ]; then
            echo "Using MongoDB Atlas for testing"
            echo "has_mongodb_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "Using local MongoDB for testing"
            echo "has_mongodb_secrets=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Run tests with MongoDB Atlas
        if: steps.check_secrets.outputs.has_mongodb_secrets == 'true'
        run: |
          echo "Running tests with MongoDB Atlas"
          pytest -v
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE || 'test_db' }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY || 'test_secret_key' }}
          ENVIRONMENT: test
          AUTH_BYPASS_ENABLED: "true"
          
      - name: Run tests with local MongoDB
        if: steps.check_secrets.outputs.has_mongodb_secrets != 'true'
        run: |
          echo "Running tests with local MongoDB"
          pytest -v
        env:
          MONGODB_URI: "mongodb://localhost:27017"
          MONGODB_DATABASE: "test_db"
          JWT_SECRET_KEY: "test_secret_key"
          ENVIRONMENT: test
          AUTH_BYPASS_ENABLED: "true"
          
  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: chatbot-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: app-code
          path: |
            .
            !venv/
            !.git/
